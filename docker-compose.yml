services:
  reverseproxy:
    #    build: src/reverseproxy/.
    image: nginx:latest
    container_name: reverseproxy
    networks:
      - transcendence
    restart: always
    ports:
      - "443:443"
    volumes:
      - ./src/reverseproxy/conf/core.conf:/etc/nginx/conf.d/core.conf
        # location of static content:
      - ./src/reverseproxy/static-content:/var/www/html
      - ./src/reverseproxy/ssl/nginx.crt:/etc/nginx/ssl/nginx.crt
      - ./src/reverseproxy/ssl/nginx.key:/etc/nginx/ssl/nginx.key

  database:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_USER: dboire
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: dboiredb
      POSTGRES_HOST: database
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - transcendence

  django-credentials:
    build: src/django-credentials/.
    container_name: django-credentials
    ports:
      - "9000:9000"
    volumes:
      - ./src/django-credentials/ssl/django-credentials.key:/etc/ssl/private/django.key
      - ./src/django-credentials/ssl/django-credentials.crt:/etc/ssl/certs/django.crt
        # - src/django-credentials/credentials:/app
    env_file:
      - ./env_test.txt
    restart: unless-stopped
    depends_on:
      - database
    networks:
      - transcendence
  
volumes:
  dblogins:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './data/dblogins'
  postgres_data:

networks:
  transcendence:
    driver: bridge
