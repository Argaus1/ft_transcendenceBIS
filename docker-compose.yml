services:
  reverseproxy:
    #    build: src/reverseproxy/.
    image: nginx:latest
    container_name: reverseproxy
    networks:
      - transcendence
    restart: always
    ports:
      - "443:443"
    volumes:
      - ./src/reverseproxy/conf/core.conf:/etc/nginx/conf.d/core.conf
      - ./src/reverseproxy/conf/proxy.conf:/etc/nginx/conf.d/proxy.conf
        # location of static content:
      - ./src/reverseproxy/static-content:/var/www/html
      - ./src/reverseproxy/ssl/nginx.crt:/etc/nginx/ssl/nginx.crt
      - ./src/reverseproxy/ssl/nginx.key:/etc/nginx/ssl/nginx.key

  kong-api:
    build: src/kong-api/.
    container_name: kong-api
    restart: always
    expose:
     - "8443"
    ports:
     - "8001:8001"
    env_file: src/kong-api/.kong.env
    networks:
      - transcendence

  django-credentials:
    build: src/django-credentials/.
    container_name: django-credentials
    expose:
      - "9000"
    volumes:
      - ./src/django-credentials/ssl/django-credentials.key:/etc/ssl/private/django.key
      - ./src/django-credentials/ssl/django-credentials.crt:/etc/ssl/certs/django.crt
        # - src/django-credentials/credentials:/app
    restart: unless-stopped
    networks:
      - transcendence
      
  # dblogins:
  #   container_name: postgres
  #   image: postgres:14
  #   restart: always
  #   env_file:
  #   - ./env_test.txt
  #   volumes:
  #     - dblogins:/var/lib/postgresql/data
  #   healthcheck:
  #     test: [ "CMD-SHELL", "pg_isready" ]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 10
  #     start_period: 30s
  #   expose:
  #     - "5432"
  #   networks:
  #     - transcendence
  
volumes:
  dblogins:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './data/dblogins'

networks:
  transcendence:
    driver: bridge
